/*Generated by WaveMaker Studio*/

package com.nwissuesjan25.wmstudio;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * Countries generated by hbm2java
 */
@Entity
@Table(name="`COUNTRIES`"
    ,schema="HR"
)

public class Countries  implements java.io.Serializable {

    private String countryId;
    private String countryName;
    private Regions regions;
    private Set<Locations> locationses = new HashSet<Locations>(0);

    public Countries() {
    }


    @Id 
    

    @Column(name="`COUNTRY_ID`", nullable=false, length=2)
    public String getCountryId() {
        return this.countryId;
    }
    
    public void setCountryId(String countryId) {
        this.countryId = countryId;
    }

    

    @Column(name="`COUNTRY_NAME`", length=40)
    public String getCountryName() {
        return this.countryName;
    }
    
    public void setCountryName(String countryName) {
        this.countryName = countryName;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`REGION_ID`")
    public Regions getRegions() {
        return this.regions;
    }
    
    public void setRegions(Regions regions) {
        this.regions = regions;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="countries")
    public Set<Locations> getLocationses() {
        return this.locationses;
    }
    
    public void setLocationses(Set<Locations> locationses) {
        this.locationses = locationses;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof Countries) )
		    return false;

		 Countries that = (Countries) o;

		 return ( (this.getCountryId()==that.getCountryId()) || ( this.getCountryId()!=null && that.getCountryId()!=null && this.getCountryId().equals(that.getCountryId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getCountryId() == null ? 0 : this.getCountryId().hashCode() );

         return result;
    }


}

