/*Generated by WaveMaker Studio*/

package com.nwissuesjan25.wmstudio.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.nwissuesjan25.wmstudio.*;

/**
 * Service object for domain model class Locations.
 * @see com.nwissuesjan25.wmstudio.Locations
 */

public interface LocationsService {
   /**
	 * Creates a new locations.
	 * 
	 * @param created
	 *            The information of the created locations.
	 * @return The created locations.
	 */
	public Locations create(Locations created);

	/**
	 * Deletes a locations.
	 * 
	 * @param locationsId
	 *            The id of the deleted locations.
	 * @return The deleted locations.
	 * @throws EntityNotFoundException
	 *             if no locations is found with the given id.
	 */
	public Locations delete(Short locationsId) throws EntityNotFoundException;

	/**
	 * Finds all locationss.
	 * 
	 * @return A list of locationss.
	 */
	public Page<Locations> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Locations> findAll(Pageable pageable);
	
	/**
	 * Finds locations by id.
	 * 
	 * @param id
	 *            The id of the wanted locations.
	 * @return The found locations. If no locations is found, this method returns
	 *         null.
	 */
	public Locations findById(Short id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a locations.
	 * 
	 * @param updated
	 *            The information of the updated locations.
	 * @return The updated locations.
	 * @throws EntityNotFoundException
	 *             if no locations is found with given id.
	 */
	public Locations update(Locations updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the locationss in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the locations.
	 */

	public long countAll();


    public Page<Locations> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

