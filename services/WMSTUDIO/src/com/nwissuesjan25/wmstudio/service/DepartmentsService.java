/*Generated by WaveMaker Studio*/

package com.nwissuesjan25.wmstudio.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.nwissuesjan25.wmstudio.*;

/**
 * Service object for domain model class Departments.
 * @see com.nwissuesjan25.wmstudio.Departments
 */

public interface DepartmentsService {
   /**
	 * Creates a new departments.
	 * 
	 * @param created
	 *            The information of the created departments.
	 * @return The created departments.
	 */
	public Departments create(Departments created);

	/**
	 * Deletes a departments.
	 * 
	 * @param departmentsId
	 *            The id of the deleted departments.
	 * @return The deleted departments.
	 * @throws EntityNotFoundException
	 *             if no departments is found with the given id.
	 */
	public Departments delete(Short departmentsId) throws EntityNotFoundException;

	/**
	 * Finds all departmentss.
	 * 
	 * @return A list of departmentss.
	 */
	public Page<Departments> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Departments> findAll(Pageable pageable);
	
	/**
	 * Finds departments by id.
	 * 
	 * @param id
	 *            The id of the wanted departments.
	 * @return The found departments. If no departments is found, this method returns
	 *         null.
	 */
	public Departments findById(Short id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a departments.
	 * 
	 * @param updated
	 *            The information of the updated departments.
	 * @return The updated departments.
	 * @throws EntityNotFoundException
	 *             if no departments is found with given id.
	 */
	public Departments update(Departments updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the departmentss in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the departments.
	 */

	public long countAll();


    public Page<Departments> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

