/*Generated by WaveMaker Studio*/

package com.nwissuesjan25.wmstudio.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import java.math.BigDecimal;


import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.nwissuesjan25.wmstudio.*;

/**
 * Service object for domain model class Testtable.
 * @see com.nwissuesjan25.wmstudio.Testtable
 */

public interface TesttableService {
   /**
	 * Creates a new testtable.
	 * 
	 * @param created
	 *            The information of the created testtable.
	 * @return The created testtable.
	 */
	public Testtable create(Testtable created);

	/**
	 * Deletes a testtable.
	 * 
	 * @param testtableId
	 *            The id of the deleted testtable.
	 * @return The deleted testtable.
	 * @throws EntityNotFoundException
	 *             if no testtable is found with the given id.
	 */
	public Testtable delete(BigDecimal testtableId) throws EntityNotFoundException;

	/**
	 * Finds all testtables.
	 * 
	 * @return A list of testtables.
	 */
	public Page<Testtable> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Testtable> findAll(Pageable pageable);
	
	/**
	 * Finds testtable by id.
	 * 
	 * @param id
	 *            The id of the wanted testtable.
	 * @return The found testtable. If no testtable is found, this method returns
	 *         null.
	 */
	public Testtable findById(BigDecimal id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a testtable.
	 * 
	 * @param updated
	 *            The information of the updated testtable.
	 * @return The updated testtable.
	 * @throws EntityNotFoundException
	 *             if no testtable is found with given id.
	 */
	public Testtable update(Testtable updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the testtables in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the testtable.
	 */

	public long countAll();


    public Page<Testtable> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

